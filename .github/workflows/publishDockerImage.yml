name: PublishDockerImage

# Run whenever the publish job runs
on:
  push:
    # tags:
    #   - "v*"

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: im2nguyen/rover

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1
      #   with:
      #     image: tonistiigi/binfmt:latest
      #     platforms: all

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          plateform: |
            linux/amd64
            linux/arm64
          push: false
          # load: true
          # tags: pratikimprowise/rover:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - run: docker save pratikimprowise/rover:test | gzip > rover.zip

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: rover-container-image
      #     path: rover.zip

  windows-container-image:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v1
      - name: Prepare Environment
        run: |
          # enable symlinks on Windows (https://git-scm.com/docs/git-config#Documentation/git-config.txt-coresymlinks)
          git config --global core.symlinks true
          # ... make sure they are *real* symlinks (https://github.com/git-for-windows/git/pull/156)
          export MSYS=winsymlinks:nativestrict
          # make sure line endings get checked out as-is
          git config --global core.autocrlf false
          git clone --depth 1 https://github.com/docker-library/official-images.git -b master ~/oi
          # create a dummy empty image/layer so we can --filter since= later to get a meaningful image list
          { echo FROM mcr.microsoft.com/windows/servercore:ltsc2022; echo RUN :; } | docker build --no-cache --tag image-list-marker -
      - name: Pull Dependencies
        run: |
          docker pull 'mcr.microsoft.com/windows/nanoserver:ltsc2022'
          docker pull 'mcr.microsoft.com/windows/servercore:ltsc2022'
      - name: Build
        run: docker build --tag 'pratikimprowise/rover:test-windows' --tag 'image-list-marker' -f Dockerfile.windows .
      - name: History
        run: docker history 'pratikimprowise/rover:test-windows'
      - name: '"docker images"'
        run: docker image ls --filter since=image-list-marker
